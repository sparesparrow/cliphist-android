version: '3.8'

services:
  # Development environment with hot reload
  android-dev:
    build:
      context: .
      target: android-dev
      dockerfile: Dockerfile
    volumes:
      - .:/workspace
      - gradle-cache:/root/.gradle
      - android-sdk-cache:/opt/android-sdk
    working_dir: /workspace
    environment:
      - ANDROID_HOME=/opt/android-sdk
      - ANDROID_SDK_ROOT=/opt/android-sdk
      - GRADLE_OPTS=-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2
    command: bash
    stdin_open: true
    tty: true
    ports:
      - "8080:8080"  # For any development servers

  # CI/CD build environment
  android-ci:
    build:
      context: .
      target: android-ci
      dockerfile: Dockerfile
    volumes:
      - .:/workspace
      - gradle-cache:/root/.gradle
    working_dir: /workspace
    environment:
      - ANDROID_HOME=/opt/android-sdk
      - ANDROID_SDK_ROOT=/opt/android-sdk
      - GRADLE_OPTS=-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

  # Production build
  android-build:
    build:
      context: .
      target: android-build
      dockerfile: Dockerfile
    volumes:
      - ./build-outputs:/workspace/app/build/outputs
      - gradle-cache:/root/.gradle
    environment:
      - ANDROID_HOME=/opt/android-sdk
      - ANDROID_SDK_ROOT=/opt/android-sdk
      - GRADLE_OPTS=-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

  # Code quality checks
  code-quality:
    build:
      context: .
      target: android-ci
      dockerfile: Dockerfile
    volumes:
      - .:/workspace
      - gradle-cache:/root/.gradle
    working_dir: /workspace
    command: ./gradlew qualityCheck
    environment:
      - ANDROID_HOME=/opt/android-sdk
      - ANDROID_SDK_ROOT=/opt/android-sdk

  # Test runner
  test-runner:
    build:
      context: .
      target: android-ci
      dockerfile: Dockerfile
    volumes:
      - .:/workspace
      - gradle-cache:/root/.gradle
    working_dir: /workspace
    command: ./gradlew testDebugUnitTest testDebugUnitTestCoverage
    environment:
      - ANDROID_HOME=/opt/android-sdk
      - ANDROID_SDK_ROOT=/opt/android-sdk

volumes:
  gradle-cache:
    driver: local
  android-sdk-cache:
    driver: local

# Usage Examples:
# 
# Development:
#   docker-compose run --rm android-dev
#   docker-compose run --rm android-dev ./gradlew assembleDebug
#
# CI/CD:
#   docker-compose run --rm android-ci ./gradlew clean build
#   docker-compose run --rm android-ci ./gradlew qualityCheck
#
# Code Quality:
#   docker-compose run --rm code-quality
#
# Tests:
#   docker-compose run --rm test-runner
#
# Production Build:
#   docker-compose up android-build