name: Android CI/CD

on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:
    branches: ["**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    # Containerized builder with Android SDK preinstalled
    container:
      image: ghcr.io/cirruslabs/android-sdk:34
      options: --user 0:0
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Gradle caching
        uses: gradle/gradle-build-action@v3

      - name: Show Java and SDK info
        run: |
          java -version
          echo "ANDROID_HOME=$ANDROID_HOME"
          sdkmanager --version || true

      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses > /dev/null

      - name: Ensure required SDK packages
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build debug and release APKs
        run: ./gradlew --no-daemon --stacktrace clean assembleDebug assembleRelease

      - name: Run unit tests
        run: ./gradlew --no-daemon --stacktrace test

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: warn

      - name: Upload ProGuard mapping (release)
        uses: actions/upload-artifact@v4
        with:
          name: mapping-release
          path: app/build/outputs/mapping/release/mapping.txt
          if-no-files-found: warn

  release:
    name: Create GitHub Release on tag
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download debug APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug-apk
          path: artifacts

      - name: Download release APK
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: artifacts

      - name: Download mapping
        uses: actions/download-artifact@v4
        with:
          name: mapping-release
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            artifacts/*.apk
            artifacts/mapping.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Android CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      - name: Accept Android Licenses
        run: yes | sdkmanager --licenses

      - name: Install required SDK packages
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Make Gradle executable
        run: chmod +x gradlew

      - name: Build Debug APK
        run: ./gradlew --no-daemon clean assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

