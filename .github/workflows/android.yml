name: Android CI

on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "**" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build, Test and Package
    runs-on: ubuntu-latest
    timeout-minutes: 30

    container:
      image: ghcr.io/reactivecircus/android-emulator-runner:34.1.0
      options: --privileged

    env:
      ORG_GRADLE_PROJECT_javaToolchainVersion: 17
      GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
      ANDROID_SDK_ROOT: /opt/android-sdk-linux
      TERM: dumb
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./**/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Print environment
        run: |
          echo "GITHUB_SHA=${GITHUB_SHA}"
          echo "GITHUB_RUN_NUMBER=${GITHUB_RUN_NUMBER}"

      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --no-daemon --stacktrace

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --no-daemon --stacktrace

      - name: Run Android Lint
        run: ./gradlew :app:lintDebug --no-daemon --stacktrace

      - name: Build Release APK (unsigned if no keystore)
        env:
          KEYSTORE_PATH: ${{ secrets.ANDROID_KEYSTORE_PATH }}
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          if [ -n "$KEYSTORE_PATH" ]; then
            echo "Using provided signing secrets"
            echo "Writing keystore to local file"
            echo "$KEYSTORE_PATH" | base64 -d > keystore.jks
            export KEYSTORE_PATH=keystore.jks
          fi
          ./gradlew :app:assembleRelease --no-daemon --stacktrace
          if [ -f app/build/outputs/mapping/release/mapping.txt ]; then
            echo "Mapping file generated"
          fi

      - name: Upload APK Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifacts
          path: |
            app/build/outputs/apk/**/**.apk
            app/build/reports/tests/**
            app/build/reports/lint-results*.*
            app/build/outputs/mapping/release/mapping.txt

  tag-release:
    name: Build on Tag and Attach APKs
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Download APK Artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk-artifacts
          path: dist

      - name: Generate release notes
        id: notes
        run: |
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "Automated build for $GITHUB_REF" >> $GITHUB_OUTPUT
          echo "Commit: $GITHUB_SHA" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.notes }}
          files: |
            dist/**/*.apk

